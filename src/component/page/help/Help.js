import React, { useState } from 'react';
import './Help.css'

const HelpPage = () => {
    const [expandedQuestion, setExpandedQuestion] = useState(null);

    const questions = [
        {
            id: 1,
            question: 'Для чого створена ця платформа?',
            answer: 'Challenger є прекрасним інструментом для створення ігор на основі карток для цікавого і невимушеного навчання',
        },
        {
            id: 2,
            question: 'Як користуватись платформою?',
            answer: 'Після реєстрації вам буде доступна функції стоврення нових ігор. Для цього вам потрібно придумати свої завдання,' +
                'бали за їх успішне виконання та список ваших учнів. Ось і все - створена гра буде радувати ваших учнів.',

        },
        {
            id: 3,
            question: 'Що таке категорія і чому я заповнюю їх двічі?',
            answer: 'Категорія - це група карток. Вони дозволяють зручно розбити завдання і виділити їх візуально за допомогою обраного кольору.' +
                'Це дозволяє швидше та легше орієнтуватись між завданнями та робить гру трохи яскравішою. ' +
                'На першому етапі ви маєте додати звичайні категорії, а на другому - штрафні. Це те, що додає трохи змагального духу до гри.'
        },
        {
            id: 4,
            question: 'Що я маю робити зі штрафами',
            answer: 'Все що завгодно. Ви можете як зробити їх корисними для навчання (наприклад прочитати ще раз параграф, на запитання по якому учень не зміг дати відповідь).' +
                'Але ви також можете додати трохи веселощів, додаючи до штрафів якісь цікаві виклики. Це може пперетворити урок на цікаву активність.'
        },
        {
            id: 5,
            question: 'Що таке ролі?',
            answer: 'Всі запитання задаються учням по черзі. Для гри ви маєте додати список ваших учнів - це і є ролі у грі.'

        },
        {
            id: 6,
            question: 'Які обмеження для створення гри?',
            answer: 'Грі достатньо всього однієї ролі щоб працювати коректно (чудово підходить для самонавчання чи підготовки до екзамену),' +
                'по одній ігровій та штрафній категорії. Ця гра створена для того, щоб бути максимально гнучкою і легкою у налаштуванні.'
        },
        {
            id: 7,
            question: 'Як правильно грати? ',
            answer: 'Гравцю випадає картка із завданням, яке він має виконати. Якщо воно зроблено правильно - натискайте зелену кнопку.' +
                'Якщо ні - червону і цьому учню випаде штрафна картка. Але інколи буває, що завдання складно виконати з причин що не залежать від гравця' +
                '(потребує багато часу, конкретної пори року, спеціального обладнання, тощо). Спеціально для цього є синя кнопка - вона видасть поточному гравцю нову картку ' +
                'без штрафів чи додавання балів.'
        },
        {
            id: 8,
            question: 'Що якщо я не хочу працювати зі штрафними картками?',
            answer: "Просто додайте одну картку, де буде 0 балів або мінус бали із простим заголовком замість завдання. На жаль, прибрати штрафні картки з гри не можна" +
                ", адже вони є її невід'ємною частиною, яка і робить Challenger особливим."
        }
    ];

    const handleQuestionClick = (questionId) => {
        if (expandedQuestion === questionId) {
            setExpandedQuestion(null);
        } else {
            setExpandedQuestion(questionId);
        }
    };

    return (
        <div>
            <h2>Вітаю на сайті "Challenger"</h2>
            <h3>Тут ви можете знайти відповіді на поширені запитання</h3>
            <h3 id={"contact-us-email"}>Залишились питання? Напиши нам на alyonahaiova@gmail.com</h3>
            <div className="question-list">
                {questions.map((question) => (
                    <div key={question.id} className="question-container">
                        <div
                            className="question"
                            onClick={() => handleQuestionClick(question.id)}
                        >
                            <div className="question-icon">
                                {expandedQuestion === question.id ? '-' : '+'}
                            </div>
                            <div className="question-text">{question.question}</div>
                        </div>
                        {expandedQuestion === question.id && (
                            <div className="answer">{question.answer}</div>
                        )}
                    </div>
                ))}
            </div>
        </div>
    );
};

export default HelpPage